import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.net.URI;
import java.util.Scanner;

public class TicketCLI {
    private static final HttpClient client = HttpClient.newHttpClient();
    private static final String BASE_URL = "http://localhost:3000/api/tickets";

    public static void main(String[] args) throws Exception {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.println("1. Configure");
            System.out.println("2. Start Simulation");
            System.out.println("3. Stop Simulation");
            System.out.println("4. View Status");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();

            if(choice == 1){
                configure();
                break;
            }
            if(choice == 2){
                sendPostRequest("/start");
                break;
            }
            if(choice == 3){
                sendPostRequest("/stop");
                break;
            }
            if(choice == 4){
                sendGetRequest("/status");
                break;
            }
            if(choice == 3){
                System.out.println("Exiting...");
                return
            }
            else{
                System.out.println("Invalid choice.");
            }

        }
    }

    private static void configure() throws Exception {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter max tickets: ");
        int maxTickets = scanner.nextInt();
        System.out.print("Enter ticket release rate (ms): ");
        int ticketReleaseRate = scanner.nextInt();
        System.out.print("Enter customer retrieval rate (ms): ");
        int customerRetrievalRate = scanner.nextInt();

        String json = String.format("{\"maxTickets\":%d,\"ticketReleaseRate\":%d,\"customerRetrievalRate\":%d}",
            maxTickets, ticketReleaseRate, customerRetrievalRate);

        HttpRequest request = HttpRequest.newBuilder()
            .uri(URI.create(BASE_URL + "/configure"))
            .header("Content-Type", "application/json")
            .POST(HttpRequest.BodyPublishers.ofString(json))
            .build();

        HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());
        System.out.println(response.body());
    }

    private static void sendPostRequest(String endpoint) throws Exception {
        HttpRequest request = HttpRequest.newBuilder()
            .uri(URI.create(BASE_URL + endpoint))
            .POST(HttpRequest.BodyPublishers.noBody())
            .build();

        HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());
        System.out.println(response.body());
    }

    private static void sendGetRequest(String endpoint) throws Exception {
        HttpRequest request = HttpRequest.newBuilder()
            .uri(URI.create(BASE_URL + endpoint))
            .GET()
            .build();

        HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());
        System.out.println(response.body());
    }
}